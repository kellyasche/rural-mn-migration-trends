---
title: "USPS Change of Address data"
format: html
editor: visual
output:
  html_document:
    toc: true
    toc_float: true
    toc_depth: 4
runtime: shiny
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(ggrepel)
library(scales)
library(shiny)
library(shinycssloaders)
library(ggiraph)
library(kableExtra)
library(rmapshaper)
library(cowplot)
library(DT)
library(htmlwidgets)
library(RColorBrewer)
library(readxl)
library(janitor)
library(lubridate)
library(systemfonts)
reset_font_cache()
library(ggtext)
library(readxl)
library(zoo)
```

```{r loading jon docs and shapefiles, cache=TRUE, include=FALSE}
theme_bar <- theme_bw() +
  theme(panel.grid.major = element_line(color = "grey70", linewidth  = 0.1),
        panel.grid.minor = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(face = "bold"),
        panel.border = element_blank(),
        legend.background = element_rect(fill = "transparent", color = "transparent"),
        legend.key = element_rect(fill = "transparent"),
        legend.key.size = unit(1, "lines"),
        legend.margin = margin(0,0,0,0),
        legend.title = element_blank(),
        legend.text = element_text(margin = margin(l = 2)),
        text = element_text(family = "Arial") ,
        plot.title.position = "plot",
        plot.title = element_text(face = "bold"))

theme_line <- theme_bw() +
  theme(legend.background = element_rect(fill = "transparent", color = "transparent"),
        legend.key = element_rect(fill = "transparent"),
        legend.text = element_text(margin = margin(l = 2)),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_line(color = "grey70", linewidth = 0.1),
        axis.ticks = element_blank(),
        axis.text = element_text(face = "bold"),
        panel.border = element_blank(),
        legend.margin = margin(0,0,0,0),
        legend.key.size = unit(1, "lines"),
        text = element_text(family = "Arial") ,
        plot.title.position = "plot",
        plot.title = element_text(face = "bold"))


theme_sf <- theme_bw() +
  theme(axis.text.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks=element_blank(),
        panel.background = element_blank(),
        panel.grid.major = element_line(color = "white"),
        panel.border = element_blank(),
        legend.title = element_blank(),
        legend.text = element_text(margin = margin(l = 2)),
        legend.margin = margin(0,0,0,0),
        legend.key.size = unit(1, "lines"),
        text = element_text(family = "Arial") ,
        plot.title.position = "plot",
        plot.title = element_text(face = "bold"))

regions <- read_csv("/Users/kellyasche/Library/CloudStorage/GoogleDrive-kasche@ruralmn.org/My Drive/Data Prep/R Projects/Join docs/county_regions.csv") %>%
    select(5,6) %>%
    unique() %>%
    mutate(edr = str_replace(edr, "  ", " "),
           planning.region = str_replace(planning.region, " Minnesota", ""),
           planning.region = fct_relevel(planning.region, "Northwest", "Northeast", "Central", "Seven County Mpls-St Paul", "Southwest", "Southeast"),
           edr = fct_relevel(edr, "EDR 1 - Northwest", "EDR 2 - Headwaters", "EDR 3 - Arrowhead", "EDR 4 - West Central", "EDR 5 - North Central", "EDR 6E- Southwest Central", "EDR 6W- Upper Minnesota Valley", "EDR 7E- East Central", "EDR 7W- Central", "EDR 8 - Southwest", "EDR 9 - South Central", "EDR 10 - Southeast", "EDR 11 - 7 County Twin Cities", "Minnesota"))

counties.regions <- read_csv("/Users/kellyasche/Library/CloudStorage/GoogleDrive-kasche@ruralmn.org/My Drive/Data Prep/R Projects/Join docs/county_regions.csv") %>%
  rename(mif = `MIF Region`) %>%
  mutate(countyfp = formatC(countyfp, width = 3, flag = "0"),
         Name = str_to_title(Name),
         Name = str_replace(Name, "Q", "q"),
         Name = str_replace(Name, "Of The", "of the"),
         Name = str_replace(Name, "Mcleod", "McLeod"),
         Dem_Desc = ifelse(Name == "Minnesota", "Minnesota", Dem_Desc) ,
         edr = str_replace(edr, "  ", " "),
         planning.region = str_replace(planning.region, " Minnesota", ""),
         planning.region = fct_relevel(planning.region, "Northwest", "Northeast", "Central", "Seven County Mpls-St Paul", "Southwest", "Southeast"),
         edr = fct_relevel(edr, "EDR 1 - Northwest", "EDR 2 - Headwaters", "EDR 3 - Arrowhead", "EDR 4 - West Central", "EDR 5 - North Central", "EDR 6E- Southwest Central", "EDR 6W- Upper Minnesota Valley", "EDR 7E- East Central", "EDR 7W- Central", "EDR 8 - Southwest", "EDR 9 - South Central", "EDR 10 - Southeast", "EDR 11 - 7 County Twin Cities", "Minnesota"),
         Dem_Desc = fct_relevel(Dem_Desc, "Entirely rural", "Town/rural mix", "Urban/town/rural mix", "Entirely urban"),
         mif = ifelse(is.na(mif), "TC", mif),
         mif = as.factor(mif),
         mif = fct_relevel(mif, "NW", "NE", "WC", "EC", "SW", "SE", "TC"))


color.ruca <- c("Entirely rural" = "#009933", "Town/rural mix" = "#99CC33", "Urban/town/rural mix" = "#CC9966", "Entirely urban" = "#754C29", "Minnesota" = "black")

color.pr <- c("Northwest" = 	"#4575b4", "Northeast" = "grey", "Central" = "#fee090", "Seven County Mpls-St Paul" = "#d73027", "Southwest" = "#91bfdb", "Southeast" = "#fc8d59", "Minnesota" = "black")

color.edr <- c("EDR 1 - Northwest" = "#b3cde3", "EDR 2 - Headwaters" = "#8c96c6", "EDR 3 - Arrowhead" = "#fe9929", "EDR 4 - West Central" = "#8856a7", "EDR 5 - North Central" = "#810f7c", "EDR 6E- Southwest Central" = "#e5f5f9", "EDR 6W- Upper Minnesota Valley" = "#bdc9e1", "EDR 7E- East Central" = "#99d8c9", "EDR 7W- Central" = "#2ca25f", "EDR 8 - Southwest" = "#74a9cf", "EDR 9 - South Central" = "#0570b0", "EDR 10 - Southeast" = "#d7301f", "EDR 11 - 7 County Twin Cities" = "#d8b365", "Minnesota" = "black")

color.pr.edr <- c ("Northwest" = "#4575b4","Northeast" = "#e0f3f8", "Central" = "#fee090", "Seven County Mpls-St Paul" = "#d73027", "Southwest" = "#91bfdb", "Southeast" = "#fc8d59", "Minnesota" = "black", "EDR 1 - Northwest" = "#b3cde3", "EDR 2 - Headwaters" = "#8c96c6", "EDR 3 - Arrowhead" = "#fe9929", "EDR 4 - West Central" = "#8856a7", "EDR 5 - North Central" = "#810f7c", "EDR 6E- Southwest Central" = "#e5f5f9", "EDR 6W- Upper Minnesota Valley" = "#bdc9e1", "EDR 7E- East Central" = "#99d8c9", "EDR 7W- Central" = "#2ca25f", "EDR 8 - Southwest" = "#74a9cf", "EDR 9 - South Central" = "#0570b0", "EDR 10 - Southeast" = "#d7301f", "EDR 11 - 7 County Twin Cities" = "#d8b365")

mn_counties <- st_read("/Users/kellyasche/Library/CloudStorage/GoogleDrive-kasche@ruralmn.org/My Drive/Data Prep/R Projects/Shapefiles/County shapefiles/MNCounties_MNDOT.shp", quiet = TRUE) %>%
  ms_simplify(keep = .01, keep_shapes = TRUE) %>%
  rename(countyfp = FIPS_CODE)

```

<br>

# About the data

This dataset is provided by the authors of the following report;

> "Changes to Rural Migraiton in the COVID-19 Pandemic" Petersen, Julia K., Richelle L. Winkler, and Miranda H. Mockrin. “Changes to Rural Migration in the COVID‐19 Pandemic.” Rural Sociology, 2024. https://doi.org/10.1111/ruso.12530.

The data provided by the authors relies on the U.S. Postal Service change-of-address data to describe whether and how established domestic migration systems changed during the COVID-19 pandemic.

From the report;

> Beginning in March 2021, monthly change-of-address data dating back to April 2017 were made publicly abailable. These data show the number of change-of-address forms filed that indicate temporary and permanent relocation into (inflows) and out-of (outflows) ZIP codes by month. - Petersen, Julia K., Richelle L. Winkler, and Miranda H. Mockrin. “Changes to Rural Migration in the COVID‐19 Pandemic.” Rural Sociology, 2024. https://doi.org/10.1111/ruso.1253

Due to the way these forms are process, a number of assumpptions were made.

-   Individual forms represent one migrant.
-   Each family form represents 3.14 individuals.
-   They excluded temporary change-of-addresses.

The USPS suppresses monthly data for ZIP codes where fewer than 11 change-of-address forms are filed in that month. The authors conudcted consitional mean imputation for each county-month missing inflow and/or outflow values. To do this, they would use the monthly average conditional on when the missing value was;

1.  Mean value for pre-prandemic (April 2017 - March 2020),
2.  Mean value post-pandemic onset (April 2020 - March 2023).

<br>

## Data limitations

The data will undercount the following;

-   young children
-   undocumented immigrants
-   young adults leaving their parental home.

The dataset includes households that file a change-of-address within a county. "This means measures of in-migration and out-migration shown in this paper will includes moves within the county as well as moves between counties." However, the net migration measures will be better indicators of the net balance of inter-counter migration since they will cancel each other out.

<br>

## The data

Below is the dataset showing only Minensota counties.

<br>

```{r master usps}
original <- read_csv("Data/USPS change of address/PandemicMigration_ByCountyYYYYMM_MigrationANDRate_Estimates.csv")

master.usps <- original %>%
  mutate(year = as.integer(str_sub(YYYYMM, 1, 4)),
         countyfp = str_sub(County_FIPS, -3, -1)) %>%
  filter(State_Name == "Minnesota") %>%
  left_join(counties.regions[,c(-2, -3)], by = c("countyfp"))

datatable(master.usps, class = "cell-border stripe", filter = "top", rownames = FALSE,
          options = list(columnDefs = list(list(className = "dt-center", targets = 1:3))))

```

<br>

The dataset has `r comma(nrow(master.usps))` rows. The first date we have data for is April 2017 and the last is March 2023.

Here is the data dictionary.

<br>

```{r usps data dictionary}
usps.data.dictionary <- read_excel("Data/USPS change of address/ruso14530-sup-0001-datas2.xlsx")

datatable(usps.data.dictionary, class = "cell-border stripe", filter = "top", rownames = FALSE,
          options = list(columnDefs = list(list(className = "dt-center", targets = 1:3))))

```

<br>

The most useful data here will be the in-, out-, and net-migration rates because we will be able to compare the impacts across rural and urban without sheer population size of urban areas dwarfing all other geographies.

The authors calculated the rate using the following formula (I'll use the net migration for the example);

-   (NetMig_countyYYYYMM_IMP / PopbyMonth) \* 10,000

In this formula, each value is defined as;

-   NetMig_countyYYYYMM_IMP = InMig_countyYYYYMM_IMP - OutMig_countyYYYYMM_IMP
    -   Each of these are calculated using the U.S. Postal Service by-month change-of-address zip code data. The computational means have already been calculated for missing/suppressed data.
-   PopbyMonth = Population data from U.S. Census Bureau Population Estimates Program. This data is for July 1 for each calendar year. The authors use this value for their July inputs, and than use linear interpolation to estimate the August - June populations. For the monthly estimates following July 2022, the authors used each county's median rate of annual population change from 2017 to 2022.

# Change in migration

First, let's look at overall changes in net migration. Once we determine what these trends are, we can explore further and see if the net changes are caused by changes to inflow or outflows.

We will explore net migration by the following geographies and county types;

-   Minnesota
-   Planning Region
-   County
-   RUCA
-   REC_2015

<br>

## Change in net migration {.tabset}

Below are the annual net migration numbers using this data. Interestingly, it shows that Minnesota as a whole has experienced a net out-migration every year. When breaking it down, this continues to be the case for every region and RUCA group. However, the out-migration lessened for more rural areas during the pandemic compared to more urban areas.

<br>

### Minnesota

<br>

```{r net migration mn}
net.mig.mn <- master.usps %>% 
  group_by(PanYEAR) %>% 
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP), 
            net.mig = sum(NetMig_countyYYYYMM_IMP), 
            pop = sum(PopbyMonth[MONTH==7])) %>%
  ungroup() %>%
mutate(in.mig.rate = (in.mig / pop) * 10000,
       out.mig.rate = (out.mig / pop) * 10000,
       net.mig.rate = (net.mig / pop) * 10000,
       year = ifelse(PanYEAR == 1, "2017-2018",
                     ifelse(PanYEAR == 2, "2018-2019",
                            ifelse(PanYEAR == 3, "2019-2020",
                                   ifelse(PanYEAR == 4, "2020-2021",
                                          ifelse(PanYEAR == 5, "2021-2022", "2022-2023"))))),
       year = as.factor(year),
       data_id = seq(n()))

net.mig.mn.plot <- ggplot(net.mig.mn, aes(PanYEAR, net.mig.rate)) + 
  geom_hline(yintercept = 0, color = "black") +
  geom_path(size = 3, color = "#67a9cf") +
  geom_smooth(se = FALSE, size = 3, aes(color = "Smoothing trend line")) +
  geom_point_interactive(size = 2, color = "#f6eff7", aes(data_id = data_id, tooltip = paste("Minnesota", "\nYear: ", PanYEAR, "\nIn-migration = ", comma(in.mig), "\nOut-migration: ", comma(out.mig), "\nNet-migration: ", comma(net.mig), "\nPopulation: ", comma(pop), "\nIn-migration rate: ", comma(in.mig.rate, accuracy = .1), "\nOut-migration rate: ", comma(out.mig.rate, accuracy = .1), "\nNet-migration rate: ", comma(net.mig.rate, accuracy = .1), sep = ""))) + 
  labs(x="", 
       y = "Net migration per 10,000 people", 
       color="", 
       title = "Net migration rate",
       subtitle = "Minnesota is estimated to have a net out-migration before and after the\npandemic.") + 
  scale_y_continuous(labels=scales::comma) +
  scale_x_continuous(breaks = c(1,2,3,4,5,6),
                     labels = c("2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023")) +
  scale_color_manual(values = "#016c59") +
  theme_line +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))

girafe(ggobj = net.mig.mn.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_toolbar(saveaspng = FALSE),
                 opts_sizing(rescale = FALSE))
```

<br>

### Planning Region

<br>

```{r net migration pr}
net.mig.pr <- master.usps %>% 
  group_by(PanYEAR, planning.region) %>% 
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP), 
            net.mig = sum(NetMig_countyYYYYMM_IMP), 
            pop = sum(PopbyMonth[MONTH==7])) %>%
  ungroup() %>%
mutate(in.mig.rate = (in.mig / pop) * 10000,
       out.mig.rate = (out.mig / pop) * 10000,
       net.mig.rate = (net.mig / pop) * 10000,
       year = ifelse(PanYEAR == 1, "2017-2018",
                     ifelse(PanYEAR == 2, "2018-2019",
                            ifelse(PanYEAR == 3, "2019-2020",
                                   ifelse(PanYEAR == 4, "2020-2021",
                                          ifelse(PanYEAR == 5, "2021-2022", "2022-2023"))))),
       year = as.factor(year),
       data_id = seq(n()))

net.mig.pr.plot <- ggplot(net.mig.pr, aes(PanYEAR, net.mig.rate, color = planning.region)) + 
  geom_hline(yintercept = 0, color = "black") +
  geom_smooth(se = FALSE, size = 3) +
  geom_point_interactive(size = 2,aes(data_id = data_id, tooltip = paste(planning.region, "\nYear: ", PanYEAR, "\nIn-migration = ", comma(in.mig), "\nOut-migration: ", comma(out.mig), "\nNet-migration: ", comma(net.mig), "\nPopulation: ", comma(pop), "\nIn-migration rate: ", comma(in.mig.rate, accuracy = .1), "\nOut-migration rate: ", comma(out.mig.rate, accuracy = .1), "\nNet-migration rate: ", comma(net.mig.rate, accuracy = .1), sep = ""))) +
  labs(x="", 
       y = "Net migration per 10,000 people", 
       color="", 
       title = "Net migration rate",
       subtitle = "Except for Southwest, all rural regions experienced an uptick in their migration patterns, but all are returning to normal.") + 
  scale_y_continuous(labels=scales::comma) +
  scale_x_continuous(breaks = c(1,2,3,4,5,6),
                     labels = c("2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023")) +
  scale_color_manual(values = color.pr) +
  theme_line +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))

girafe(ggobj = net.mig.pr.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_toolbar(saveaspng = FALSE),
                 opts_sizing(rescale = FALSE))
```

<br>

### EDR

As we get into smaller geographies, we begin to see some interesting patterns.

**Northwest** All EDRs saw significant improvement from their net out migration in 2017. EDR 5 actually experienced a net in-migration for a few years before falling back to net out-migration.

**Northeast** The arrowhead has seen improvement in their net out-migration during and after their pandemic.

**Central** There is improvement among all EDRs in their net-out migration numbers. EDR 7E actually experienced a net in-migration during the pandemic and continues to be breaking even.

**Seven County Metro** The seven county metro continues a slide in their net out-migration with slight improvement over the last few years.

**Southwest** Southwest hasn't seen a whole love of change except for EDR 9 which experienced a huge drop off.

**Southeast** A bit of a roller coaster for Southeast with big improvement in out-migration followed by a steep worsening. In the last year they are right back where they started.

<br>

```{r net migration edr}
net.mig.edr <- master.usps %>% 
  group_by(PanYEAR, edr, planning.region) %>% 
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP), 
            net.mig = sum(NetMig_countyYYYYMM_IMP), 
            pop = sum(PopbyMonth[MONTH==7])) %>%
  ungroup() %>%
mutate(in.mig.rate = (in.mig / pop) * 10000,
       out.mig.rate = (out.mig / pop) * 10000,
       net.mig.rate = (net.mig / pop) * 10000,
       year = ifelse(PanYEAR == 1, "2017-2018",
                     ifelse(PanYEAR == 2, "2018-2019",
                            ifelse(PanYEAR == 3, "2019-2020",
                                   ifelse(PanYEAR == 4, "2020-2021",
                                          ifelse(PanYEAR == 5, "2021-2022", "2022-2023"))))),
       year = as.factor(year),
       data_id = seq(n()))

net.mig.edr.plot <- ggplot(net.mig.edr, aes(PanYEAR, net.mig.rate, color = edr)) +
  facet_wrap(~planning.region, ncol = 2, scales = "free_y") +
  geom_hline(yintercept = 0, color = "black") +
  geom_smooth(se = FALSE, size = 3) +
  geom_point_interactive(size = 2,aes(data_id = data_id, tooltip = paste(edr, "\nYear: ", PanYEAR, "\nIn-migration = ", comma(in.mig), "\nOut-migration: ", comma(out.mig), "\nNet-migration: ", comma(net.mig), "\nPopulation: ", comma(pop), "\nIn-migration rate: ", comma(in.mig.rate, accuracy = .1), "\nOut-migration rate: ", comma(out.mig.rate, accuracy = .1), "\nNet-migration rate: ", comma(net.mig.rate, accuracy = .1), sep = ""))) +
  labs(x="", 
       y = "Net migration per 10,000 people", 
       color="", 
       title = "Net migration rate",
       subtitle = "Except for Southwest, all rural regions experienced an uptick in their migration patterns, but all are returning to normal.") + 
  scale_y_continuous(labels=scales::comma) +
  scale_x_continuous(breaks = c(1,2,3,4,5,6),
                     labels = c("2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023")) +
  scale_color_manual(values = color.edr,
                     guide = guide_legend(ncol = 3)) +
  theme_line +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))

girafe(ggobj = net.mig.edr.plot, width_svg = 7, height_svg = 10) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_toolbar(saveaspng = FALSE),
                 opts_sizing(rescale = FALSE))
```

<br>

### RUCA

Out of all the charts this one most clearly shows that rural areas tended to do better during the pandemic.

<br>

```{r net migration ruca}
net.mig.ruca <- master.usps %>% 
  group_by(PanYEAR, Dem_Desc) %>% 
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP), 
            net.mig = sum(NetMig_countyYYYYMM_IMP), 
            pop = sum(PopbyMonth[MONTH==7])) %>%
  ungroup() %>%
mutate(in.mig.rate = (in.mig / pop) * 10000,
       out.mig.rate = (out.mig / pop) * 10000,
       net.mig.rate = (net.mig / pop) * 10000,
       year = ifelse(PanYEAR == 1, "2017-2018",
                     ifelse(PanYEAR == 2, "2018-2019",
                            ifelse(PanYEAR == 3, "2019-2020",
                                   ifelse(PanYEAR == 4, "2020-2021",
                                          ifelse(PanYEAR == 5, "2021-2022", "2022-2023"))))),
       year = as.factor(year),
       data_id = seq(n()))

net.mig.ruca.plot <- ggplot(net.mig.ruca, aes(PanYEAR, net.mig.rate, color = Dem_Desc)) + 
  geom_hline(yintercept = 0, color = "black") +
  geom_smooth(se = FALSE, size = 3) +
  geom_point_interactive(size = 2,aes(data_id = data_id, tooltip = paste(Dem_Desc, "\nYear: ", PanYEAR, "\nIn-migration = ", comma(in.mig), "\nOut-migration: ", comma(out.mig), "\nNet-migration: ", comma(net.mig), "\nPopulation: ", comma(pop), "\nIn-migration rate: ", comma(in.mig.rate, accuracy = .1), "\nOut-migration rate: ", comma(out.mig.rate, accuracy = .1), "\nNet-migration rate: ", comma(net.mig.rate, accuracy = .1), sep = ""))) +
  labs(x="", 
       y = "Net migration per 10,000 people", 
       color="", 
       title = "Net migration rate",
       subtitle = "Except for Southwest, all rural regions experienced an uptick in their migration patterns, but all are returning to normal.") + 
  scale_y_continuous(labels=scales::comma) +
  scale_x_continuous(breaks = c(1,2,3,4,5,6),
                     labels = c("2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023")) +
  scale_color_manual(values = color.ruca) +
  theme_line +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))

girafe(ggobj = net.mig.ruca.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_toolbar(saveaspng = FALSE),
                 opts_sizing(rescale = FALSE))
```

<br>

### Recreation Type

Recreational counties experienced a significently improved out migration rate during the pandemic but the trendline is going towards pre-pandemic levels again.

<br>

```{r net migration rec}
net.mig.rec <- master.usps %>% 
  group_by(PanYEAR, REC_2015) %>% 
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP), 
            net.mig = sum(NetMig_countyYYYYMM_IMP), 
            pop = sum(PopbyMonth[MONTH==7])) %>%
  ungroup() %>%
mutate(in.mig.rate = (in.mig / pop) * 10000,
       out.mig.rate = (out.mig / pop) * 10000,
       net.mig.rate = (net.mig / pop) * 10000,
       year = ifelse(PanYEAR == 1, "2017-2018",
                     ifelse(PanYEAR == 2, "2018-2019",
                            ifelse(PanYEAR == 3, "2019-2020",
                                   ifelse(PanYEAR == 4, "2020-2021",
                                          ifelse(PanYEAR == 5, "2021-2022", "2022-2023"))))),
       year = as.factor(year),
       data_id = seq(n()),
       REC_2015 = ifelse(REC_2015 == 1, "Recreational", "Not recreational"),
       REC_2015 = fct_relevel(REC_2015, "Recreational", "Not recreational"))

net.mig.rec.plot <- ggplot(net.mig.rec, aes(PanYEAR, net.mig.rate, color = REC_2015)) + 
  geom_hline(yintercept = 0, color = "black") +
  geom_smooth(se = FALSE, size = 3) +
  geom_point_interactive(size = 2,aes(data_id = data_id, tooltip = paste(REC_2015, "\nYear: ", PanYEAR, "\nIn-migration = ", comma(in.mig), "\nOut-migration: ", comma(out.mig), "\nNet-migration: ", comma(net.mig), "\nPopulation: ", comma(pop), "\nIn-migration rate: ", comma(in.mig.rate, accuracy = .1), "\nOut-migration rate: ", comma(out.mig.rate, accuracy = .1), "\nNet-migration rate: ", comma(net.mig.rate, accuracy = .1), sep = ""))) +
  labs(x="", 
       y = "Net migration per 10,000 people", 
       color="", 
       title = "Net migration rate",
       subtitle = "Huge improvement in out migration for recreational counties.") + 
  scale_y_continuous(labels=scales::comma) +
  scale_x_continuous(breaks = c(1,2,3,4,5,6),
                     labels = c("2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023")) +
  scale_color_manual(values = brewer.pal(n = 5, "RdYlBu")) +
  theme_line +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))

girafe(ggobj = net.mig.rec.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_toolbar(saveaspng = FALSE),
                 opts_sizing(rescale = FALSE))
```

<br>

## Change in net migration before and after pandemic {.tabset}

Let's copy the report's analysis which compared migration rates grouped together in years before and after the pandemic.

We will group the years together by the following;

-   Group 1 = April 2017 - March 2020
-   Group 2 = April 2020 - March 2023

<br>

### Minnesota

<br>

```{r net mig before and after pandemic mn}

before.after.pan.mig.rates.mn <- master.usps %>%
  group_by(PanYEAR) %>%
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP),
            net.mig = sum(NetMig_countyYYYYMM_IMP),
            pop = sum(PopbyMonth[MONTH == 7])) %>%
  ungroup() %>%
  mutate(year.group = ifelse(PanYEAR %in% c(1,2,3), "Before pandemic", "After pandemic")) %>%
  group_by(year.group) %>%
  summarize(avg.in.mig = mean(in.mig),
            avg.out.mig = mean(out.mig),
            avg.net.mig = mean(net.mig),
            avg.pop = mean(pop)) %>%
  ungroup() %>%
  mutate(avg.in.mig.rate = (avg.in.mig / avg.pop) * 10000,
         avg.out.mig.rate = (avg.out.mig / avg.pop) * 10000,
         avg.net.mig.rate = (avg.net.mig / avg.pop) * 10000,
         year.group = fct_relevel(year.group, "Before pandemic", "After pandemic"),
         data_id = seq(n()))

before.after.pan.mig.rates.mn.plot <- ggplot(before.after.pan.mig.rates.mn, aes(year.group, avg.net.mig.rate)) +
  geom_col_interactive(position = "dodge", aes(data_id = data_id, tooltip = paste(year.group, "\nAveage in-migration: ", comma(avg.in.mig, accuracy = 1), "\nAverage out-migration: ", comma(avg.out.mig, accuracy = 1), "\nAverage net migration: ", comma(avg.net.mig, accuracy = 1), "\nAverage population: ", comma(avg.pop, accuracy = 1), "\nAverage net migration rate per 10,000: ", comma(avg.net.mig.rate, accuracy = 1), sep = ""))) +
  geom_label(aes(label = comma(avg.net.mig.rate, accuracy = 1)), show.legend = FALSE, color = "black", size = 5, position = position_dodge(width = .9)) +
  labs(x="", y = "", color="", title = "Average net migration rate in Minnesota before and after\npandemic",
       subtitle = "Average net out-migration increased since the pandemic")+
  scale_y_continuous(labels=scales::comma)+
  theme_bar+
  scale_fill_manual(values = brewer.pal(n = 5, "RdYlBu"),
                    guide = guide_legend(ncol = 3)) +
  theme(legend.position = "bottom",
        text = element_text(size = 14))


girafe(ggobj = before.after.pan.mig.rates.mn.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_sizing(rescale = FALSE))      

```

<br>

### Planning Region

<br>

```{r net mig before and after pandemic pr}

before.after.pan.mig.rates.pr <- master.usps %>%
  group_by(PanYEAR, planning.region) %>%
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP),
            net.mig = sum(NetMig_countyYYYYMM_IMP),
            pop = sum(PopbyMonth[MONTH == 7])) %>%
  ungroup() %>%
  mutate(year.group = ifelse(PanYEAR %in% c(1,2,3), "Before pandemic", "After pandemic")) %>%
  group_by(year.group, planning.region) %>%
  summarize(avg.in.mig = mean(in.mig),
            avg.out.mig = mean(out.mig),
            avg.net.mig = mean(net.mig),
            avg.pop = mean(pop)) %>%
  ungroup() %>%
  mutate(avg.in.mig.rate = (avg.in.mig / avg.pop) * 10000,
         avg.out.mig.rate = (avg.out.mig / avg.pop) * 10000,
         avg.net.mig.rate = (avg.net.mig / avg.pop) * 10000,
         year.group = fct_relevel(year.group, "Before pandemic", "After pandemic"),
         data_id = seq(n()))

before.after.pan.mig.rates.pr.plot <- ggplot(before.after.pan.mig.rates.pr, aes(planning.region, avg.net.mig.rate, fill = year.group, group = year.group)) +
  geom_col_interactive(position = "dodge", aes(data_id = data_id, tooltip = paste(planning.region, "\nBefore or after pandemic:", year.group, "\nAverage in-migration: ", comma(avg.in.mig, accuracy = 1), "\nAverage out-migration: ", comma(avg.out.mig, accuracy = 1), "\nAverage net migration: ", comma(avg.net.mig, accuracy = 1), "\nAverage population: ", comma(avg.pop, accuracy = 1), "\nAverage net migration rate per 10,000: ", comma(avg.net.mig.rate, accuracy = 1), sep = ""))) +
  geom_label(aes(label = comma(avg.net.mig.rate, accuracy = 1)), show.legend = FALSE, color = "black", size = 5, position = position_dodge(width = .9)) +
  labs(x="", y = "", color="", title = "Average net migration rate in Minnesota before and after\npandemic",
       subtitle = "Out-migration improved in all Greater Minnesota regions except for Southwest")+
  scale_y_continuous(labels=scales::comma)+
  theme_bar+
  scale_fill_manual(values = brewer.pal(n = 5, "RdYlBu"),
                    guide = guide_legend(ncol = 3)) +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))


girafe(ggobj = before.after.pan.mig.rates.pr.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_sizing(rescale = FALSE))      

```

<br>

### RUCA

<br>

```{r net mig before and after pandemic ruca}

before.after.pan.mig.rates.ruca <- master.usps %>%
  group_by(PanYEAR, Dem_Desc) %>%
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP),
            net.mig = sum(NetMig_countyYYYYMM_IMP),
            pop = sum(PopbyMonth[MONTH == 7])) %>%
  ungroup() %>%
  mutate(year.group = ifelse(PanYEAR %in% c(1,2,3), "Before pandemic", "After pandemic")) %>%
  group_by(year.group, Dem_Desc) %>%
  summarize(avg.in.mig = mean(in.mig),
            avg.out.mig = mean(out.mig),
            avg.net.mig = mean(net.mig),
            avg.pop = mean(pop)) %>%
  ungroup() %>%
  mutate(avg.in.mig.rate = (avg.in.mig / avg.pop) * 10000,
         avg.out.mig.rate = (avg.out.mig / avg.pop) * 10000,
         avg.net.mig.rate = (avg.net.mig / avg.pop) * 10000,
         year.group = fct_relevel(year.group, "Before pandemic", "After pandemic"),
         data_id = seq(n()))

before.after.pan.mig.rates.ruca.plot <- ggplot(before.after.pan.mig.rates.ruca, aes(Dem_Desc, avg.net.mig.rate, fill = year.group, group = year.group)) +
  geom_col_interactive(position = "dodge", aes(data_id = data_id, tooltip = paste(Dem_Desc, "\nBefore or after pandemic:", year.group, "\nAverage in-migration: ", comma(avg.in.mig, accuracy = 1), "\nAverage out-migration: ", comma(avg.out.mig, accuracy = 1), "\nAverage net migration: ", comma(avg.net.mig, accuracy = 1), "\nAverage population: ", comma(avg.pop, accuracy = 1), "\nAverage net migration rate per 10,000: ", comma(avg.net.mig.rate, accuracy = 1), sep = ""))) +
  geom_label(aes(label = comma(avg.net.mig.rate, accuracy = 1)), show.legend = FALSE, color = "black", size = 5, position = position_dodge(width = .9)) +
  labs(x="", y = "", color="", title = "Average net migration rate in Minnesota before and after\npandemic",
       subtitle = "Out-migration improved in all county groups except entirely urban")+
  scale_y_continuous(labels=scales::comma)+
  theme_bar+
  scale_fill_manual(values = brewer.pal(n = 5, "RdYlBu"),
                    guide = guide_legend(ncol = 3)) +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))


girafe(ggobj = before.after.pan.mig.rates.ruca.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_sizing(rescale = FALSE))      

```

<br>

### Recreation type

Recreational counties has significant improvement in their overall out-migration from before the pandemic. Non-recreational counties actually had their out-migration worsen after the pandemic.

<br>

```{r net mig before and after pandemic rec}
before.after.pan.mig.rates.rec <- master.usps %>%
  group_by(PanYEAR, REC_2015) %>%
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP),
            net.mig = sum(NetMig_countyYYYYMM_IMP),
            pop = sum(PopbyMonth[MONTH == 7])) %>%
  ungroup() %>%
  mutate(year.group = ifelse(PanYEAR %in% c(1,2,3), "Before pandemic", "After pandemic")) %>%
  group_by(year.group, REC_2015) %>%
  summarize(avg.in.mig = mean(in.mig),
            avg.out.mig = mean(out.mig),
            avg.net.mig = mean(net.mig),
            avg.pop = mean(pop)) %>%
  ungroup() %>%
  mutate(avg.in.mig.rate = (avg.in.mig / avg.pop) * 10000,
         avg.out.mig.rate = (avg.out.mig / avg.pop) * 10000,
         avg.net.mig.rate = (avg.net.mig / avg.pop) * 10000,
         year.group = fct_relevel(year.group, "Before pandemic", "After pandemic"),
         data_id = seq(n()),
       REC_2015 = ifelse(REC_2015 == 1, "Recreational", "Not recreational"),
       REC_2015 = fct_relevel(REC_2015, "Recreational", "Not recreational"))

before.after.pan.mig.rates.rec.plot <- ggplot(before.after.pan.mig.rates.rec, aes(REC_2015, avg.net.mig.rate, fill = year.group, group = year.group)) +
  geom_col_interactive(position = "dodge", aes(data_id = data_id, tooltip = paste(REC_2015, "\nBefore or after pandemic:", year.group, "\nAverage in-migration: ", comma(avg.in.mig, accuracy = 1), "\nAverage out-migration: ", comma(avg.out.mig, accuracy = 1), "\nAverage net migration: ", comma(avg.net.mig, accuracy = 1), "\nAverage population: ", comma(avg.pop, accuracy = 1), "\nAverage net migration rate per 10,000: ", comma(avg.net.mig.rate, accuracy = 1), sep = ""))) +
  geom_label(aes(label = comma(avg.net.mig.rate, accuracy = 1)), show.legend = FALSE, color = "black", size = 5, position = position_dodge(width = .9)) +
  labs(x="", y = "", color="", title = "Average net migration rate in Minnesota before and after\npandemic",
       subtitle = "Out-migration improved in all county groups except entirely urban")+
  scale_y_continuous(labels=scales::comma)+
  theme_bar+
  scale_fill_manual(values = brewer.pal(n = 5, "RdYlBu"),
                    guide = guide_legend(ncol = 3)) +
  theme(legend.position = "bottom",
        text = element_text(size = 14),
        axis.text.x = element_text(angle = 25, hjust = .9))


girafe(ggobj = before.after.pan.mig.rates.rec.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_sizing(rescale = FALSE))      

```

<br>

### County

The following chart shows the percent change in net migration from before the pandemic to the years during and after the pandemic.

The chart shows that much of greater Minnesota has experienced an improvement to their net migration numbers. The worsening of net migration mostly occured in the metropolitan areas of the state.


<br>

```{r net mig before and after pandemic county}
before.after.pan.mig.rates.county <- master.usps %>%
  group_by(PanYEAR, countyfp, County_Name) %>%
  summarize(in.mig = sum(InMig_countyYYYYMM_IMP),
            out.mig = sum(OutMig_countyYYYYMM_IMP),
            net.mig = sum(NetMig_countyYYYYMM_IMP),
            pop = sum(PopbyMonth[MONTH == 7])) %>%
  ungroup() %>%
  mutate(year.group = ifelse(PanYEAR %in% c(1,2,3), "Before pandemic", "After pandemic")) %>%
  group_by(year.group, countyfp, County_Name) %>%
  summarize(avg.in.mig = mean(in.mig),
            avg.out.mig = mean(out.mig),
            avg.net.mig = mean(net.mig),
            avg.pop = mean(pop)) %>%
  ungroup() %>%
  mutate(avg.in.mig.rate = (avg.in.mig / avg.pop) * 10000,
         avg.out.mig.rate = (avg.out.mig / avg.pop) * 10000,
         avg.net.mig.rate = (avg.net.mig / avg.pop) * 10000,
         year.group = fct_relevel(year.group, "Before pandemic", "After pandemic"),
         data_id = seq(n())) %>%
  group_by(countyfp) %>%
  mutate(pct.change = (avg.net.mig.rate - avg.net.mig.rate[year.group == "Before pandemic"]) / avg.net.mig.rate[year.group == "Before pandemic"],
         improvement = ifelse(avg.net.mig.rate[year.group == "After pandemic"] > avg.net.mig.rate[year.group == "Before pandemic"], "Improvement", "Worse")) %>%
  ungroup() %>%
  left_join(mn_counties[,c(5,7)], by = "countyfp")

names(before.after.pan.mig.rates.county)

before.after.pan.mig.rates.county.plot <- ggplot(data = filter(before.after.pan.mig.rates.county, year.group == "After pandemic")) +
  geom_sf_interactive(color = "grey85", aes(geometry = geometry, fill = improvement, data_id = countyfp, tooltip = paste(County_Name, "\nAverage net migration after pandemic: ", comma(avg.net.mig.rate, accuracy = 1), sep = ""))) +
  theme_sf+
  scale_fill_manual(values = brewer.pal(n = 5, "RdYlBu")) +
  labs(title = "Did net migration improve from before the\npandemic?") +
  theme(legend.box.margin = margin(50, 0, 0, -100),
        text = element_text(size = 18))

girafe(ggobj = before.after.pan.mig.rates.county.plot, width_svg = 7, height_svg = 7) %>%
  girafe_options(opts_selection(type = "none"),
                 opts_sizing(rescale = FALSE))      

       
```

<br>

# Out vs. In migration

So what drove this change across Minnesota? Was it that people stopped moving in to places with worsening net migration numbers? Or, was it that more people left those places? Let's take a look.

<br>

## Before vs. after pandemic{.tabset}

The charts below compare the in migration and out migration over two time periods;

* Before pandemic: April 2017 - March 2020
* After pandemic: April 2020 - March 2023

<br>

### Minnesota

<br>

<br>

### Planning Region

<br>

<br>

### EDR

<br>

<br>

### RUCA

<br>

<br>

### Recreation type

<br>

<br>
